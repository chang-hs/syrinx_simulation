(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    146993,       2948]
NotebookOptionsPosition[    144128,       2891]
NotebookOutlinePosition[    144705,       2911]
CellTagsIndexPosition[    144662,       2908]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Canal One-Way Valve Model", "Chapter",
 CellChangeTimes->{{3.800650061929471*^9, 3.800650064647647*^9}, {
  3.8152808790266533`*^9, 3.8152808806031227`*^9}, {3.819749169247349*^9, 
  3.819749174777309*^9}, {3.820122126281303*^9, 
  3.820122140720552*^9}},ExpressionUUID->"55835633-d11e-4712-bd69-\
1d0b2e007bb9"],

Cell["No one-way valve, patent central canal", "Subsubtitle",
 CellChangeTimes->{{3.800650087877302*^9, 
  3.8006501033083344`*^9}},ExpressionUUID->"7c173022-470f-4072-bb3c-\
0644d67a842a"],

Cell[BoxData["Quit"], "Input",
 CellChangeTimes->{{3.8005920742082644`*^9, 3.8005920748211327`*^9}},
 CellLabel->
  "In[526]:=",ExpressionUUID->"eae7ec3d-03e4-48a1-a668-060fa651465f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"direction", " ", "=", " ", "1"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"direction", " ", "of", " ", "the", " ", "diod", " ", "0"}], ":",
      " ", "normal"}], ",", " ", 
    RowBox[{"1", ":", " ", "reverse"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dx", " ", "=", " ", "10"}], ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"efficiency", " ", "of", " ", "the", " ", "diode"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"diod", "[", 
    RowBox[{"v_", ",", " ", "r_", ",", " ", "x_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Which", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"direction", " ", "==", "0"}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"v", ">", "0"}], ",", " ", 
       FractionBox["v", "r"], ",", 
       FractionBox["v", 
        RowBox[{"x", "*", "r"}]]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"direction", "==", "1"}], ",", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"v", "<", "0"}], ",", 
       FractionBox["v", "r"], ",", " ", 
       FractionBox["v", 
        RowBox[{"x", "*", "r"}]]}], "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"n", "=", "100"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cycle", "=", "1"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "cycle", " ", "per", " ", "sec", " ", "of", " ", "CSF", " ", "wave"}], " ",
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"subaraP", "=", "13332.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"pulseAmp", "=", 
  RowBox[{"subaraP", "/", "5"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"en", "[", "t_", "]"}], "=", 
   RowBox[{
    RowBox[{"pulseAmp", "*", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "Pi", "*", "cycle", "*", " ", 
       RowBox[{"t", "/", "tperiod"}]}], "]"}]}], "+", "subaraP"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rc", "=", 
    RowBox[{"1.78", " ", 
     RowBox[{"10", "^", "11"}], "*", 
     RowBox[{"100", "/", "n"}]}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"central", " ", "canal", " ", "resistance"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", GridBox[{
   {
    RowBox[{
     RowBox[{
      RowBox[{"rs", "=", 
       RowBox[{"6872", "*", 
        RowBox[{"100", "/", "n"}]}]}], ";"}], 
     RowBox[{"(*", " ", 
      RowBox[{"subarachnoid", " ", "resistance"}], " ", "*)"}]}]},
   {"\[Placeholder]"}
  }], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rpattern", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r", "=", 
   RowBox[{"Which", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"rpattern", "==", "1"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{"rc", ",", "n"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"rpattern", "==", "2"}], ",", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{"rc", ",", 
         RowBox[{
          RowBox[{"n", "/", "2"}], "-", "1"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"100", "rc"}], "}"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{"rc", ",", 
         RowBox[{"n", "/", "2"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"(*", " ", 
      RowBox[{
      "increased", " ", "central", " ", "canal", " ", "resistance", " ", "at",
        " ", "point", " ", 
       RowBox[{"n", "/", "2"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"rpattern", "==", "3"}], ",", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{"rc", ",", 
         RowBox[{"n", "-", "1"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1000", "rc"}], "}"}]}], "]"}]}], 
    RowBox[{"(*", " ", 
     RowBox[{
     "increased", " ", "central", " ", "canal", " ", "resistance", " ", "at", 
      " ", "the", " ", "filum", " ", "terminale"}], " ", "*)"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rpattern", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"R", "=", 
   RowBox[{"Which", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Rpattern", "==", " ", "1"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{"rs", ",", "n"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Rpattern", "==", "2"}], ",", " ", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{"rs", ",", 
         RowBox[{
          RowBox[{"n", "/", "2"}], "-", "1"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"100", "rs"}], "}"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{"rs", ",", 
         RowBox[{"n", "/", "2"}]}], "]"}]}], "]"}]}], 
    RowBox[{"(*", " ", 
     RowBox[{
     "increased", " ", "subarachnoid", " ", "resistance", " ", "at", " ", 
      "point", " ", 
      RowBox[{"n", "/", "2"}]}], " ", "*)"}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rflux", "=", "rc"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"R0", "=", "rs"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Rout", "=", "rc"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"dsub", "=", 
   RowBox[{"10", "^", 
    RowBox[{"(", 
     RowBox[{"-", "4"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dtheca", "=", 
   RowBox[{"100", "*", "10"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dcanal", "=", 
   RowBox[{"10", "^", 
    RowBox[{"(", 
     RowBox[{"-", "9"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"c", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"dcanal", ",", 
      RowBox[{"n", "-", "1"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"canal", " ", "capacitance"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"d", "=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{"dsub", ",", 
        RowBox[{"n", "-", "1"}]}], "]"}], ",", " ", 
      RowBox[{"{", "dtheca", "}"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"subarachnoid", " ", "capacitance"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"Dcist", "=", 
   RowBox[{".1", "dsub"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"k", "=", "25"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"location", " ", "of", " ", "one"}], "-", 
    RowBox[{"way", " ", "valve", " ", "of", " ", "the", " ", "canal"}]}], " ",
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Vob", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Rout", " ", 
       RowBox[{"r", "[", 
        RowBox[{"[", "1", "]"}], "]"}], " ", 
       RowBox[{"en", "[", "t", "]"}]}], " ", "+", 
      RowBox[{"Rflux", " ", 
       RowBox[{"r", "[", 
        RowBox[{"[", "1", "]"}], "]"}], " ", 
       RowBox[{"Vcist", "[", "t", "]"}]}], "+", 
      RowBox[{"Rflux", " ", "Rout", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"v", "[", "1", "]"}], "[", "t", "]"}], "+", 
         RowBox[{
          RowBox[{"u", "[", "1", "]"}], "[", "t", "]"}]}], ")"}]}]}], ")"}], 
    "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Rout", " ", 
       RowBox[{"r", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "+", 
      RowBox[{"Rflux", " ", 
       RowBox[{"r", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "+", 
      RowBox[{"Rflux", " ", "Rout"}]}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"eqn", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"v", "[", "1", "]"}], "'"}], "[", "t", "]"}], "==", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"Vob", "[", "t", "]"}], "-", 
             RowBox[{
              RowBox[{"v", "[", "1", "]"}], "[", "t", "]"}], "-", 
             RowBox[{
              RowBox[{"u", "[", "1", "]"}], "[", "t", "]"}]}], 
            RowBox[{"r", "[", 
             RowBox[{"[", "1", "]"}], "]"}]], "+", 
           FractionBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"v", "[", "2", "]"}], "[", "t", "]"}], "+", 
              RowBox[{
               RowBox[{"u", "[", "2", "]"}], "[", "t", "]"}], "-", 
              RowBox[{
               RowBox[{"v", "[", "1", "]"}], "[", "t", "]"}], "-", 
              RowBox[{
               RowBox[{"u", "[", "1", "]"}], "[", "t", "]"}]}], ")"}], 
            RowBox[{"r", "[", 
             RowBox[{"[", "2", "]"}], "]"}]]}], ")"}], "/", 
         RowBox[{"c", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"u", "[", "1", "]"}], "'"}], "[", "t", "]"}], "==", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"Vcist", "[", "t", "]"}], "-", 
             RowBox[{
              RowBox[{"u", "[", "1", "]"}], "[", "t", "]"}]}], 
            RowBox[{"R", "[", 
             RowBox[{"[", "1", "]"}], "]"}]], "+", 
           FractionBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"u", "[", "2", "]"}], "[", "t", "]"}], "-", 
              RowBox[{
               RowBox[{"u", "[", "1", "]"}], "[", "t", "]"}]}], ")"}], 
            RowBox[{"R", "[", 
             RowBox[{"[", "2", "]"}], "]"}]], "+", 
           RowBox[{
            RowBox[{"c", "[", 
             RowBox[{"[", "1", "]"}], "]"}], " ", 
            RowBox[{
             RowBox[{
              RowBox[{"v", "[", "1", "]"}], "'"}], "[", "t", "]"}]}]}], ")"}],
          "/", 
         RowBox[{"d", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"Vcist", "'"}], "[", "t", "]"}], "==", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"en", "[", "t", "]"}], "-", 
             RowBox[{"Vcist", "[", "t", "]"}]}], "R0"], "+", 
           FractionBox[
            RowBox[{
             RowBox[{"Vob", "[", "t", "]"}], "-", 
             RowBox[{"Vcist", "[", "t", "]"}]}], "Rout"], "+", 
           FractionBox[
            RowBox[{
             RowBox[{
              RowBox[{"u", "[", "1", "]"}], "[", "t", "]"}], "-", 
             RowBox[{"Vcist", "[", "t", "]"}]}], 
            RowBox[{"R", "[", 
             RowBox[{"[", "1", "]"}], "]"}]]}], ")"}], "/", "Dcist"}]}]}], 
      "}"}], ",", "\n", "\t", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"v", "[", "i", "]"}], "'"}], "[", "t", "]"}], "==", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"v", "[", 
                RowBox[{"i", "-", "1"}], "]"}], "[", "t", "]"}], "+", 
              RowBox[{
               RowBox[{"u", "[", 
                RowBox[{"i", "-", "1"}], "]"}], "[", "t", "]"}], "-", 
              RowBox[{
               RowBox[{"v", "[", "i", "]"}], "[", "t", "]"}], "-", 
              RowBox[{
               RowBox[{"u", "[", "i", "]"}], "[", "t", "]"}]}], ")"}], 
            RowBox[{"r", "[", 
             RowBox[{"[", "i", "]"}], "]"}]], "+", 
           FractionBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"v", "[", 
                RowBox[{"i", "+", "1"}], "]"}], "[", "t", "]"}], "+", 
              RowBox[{
               RowBox[{"u", "[", 
                RowBox[{"i", "+", "1"}], "]"}], "[", "t", "]"}], "-", 
              RowBox[{
               RowBox[{"v", "[", "i", "]"}], "[", "t", "]"}], "-", 
              RowBox[{
               RowBox[{"u", "[", "i", "]"}], "[", "t", "]"}]}], ")"}], 
            RowBox[{"r", "[", 
             RowBox[{"[", 
              RowBox[{"i", "+", "1"}], "]"}], "]"}]]}], ")"}], "/", 
         RowBox[{"c", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "2", ",", 
         RowBox[{"n", "-", "2"}]}], "}"}]}], "]"}], ",", "\n", "       ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"u", "[", "i", "]"}], "'"}], "[", "t", "]"}], "==", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"u", "[", 
                RowBox[{"i", "-", "1"}], "]"}], "[", "t", "]"}], "-", 
              RowBox[{
               RowBox[{"u", "[", "i", "]"}], "[", "t", "]"}]}], ")"}], 
            RowBox[{"R", "[", 
             RowBox[{"[", "i", "]"}], "]"}]], "+", 
           FractionBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"u", "[", 
                RowBox[{"i", "+", "1"}], "]"}], "[", "t", "]"}], "-", 
              RowBox[{
               RowBox[{"u", "[", "i", "]"}], "[", "t", "]"}]}], ")"}], 
            RowBox[{"R", "[", 
             RowBox[{"[", 
              RowBox[{"i", "+", "1"}], "]"}], "]"}]], "+", 
           RowBox[{
            RowBox[{"c", "[", 
             RowBox[{"[", "i", "]"}], "]"}], " ", 
            RowBox[{
             RowBox[{
              RowBox[{"v", "[", "i", "]"}], "'"}], "[", "t", "]"}]}]}], ")"}],
          "/", 
         RowBox[{"d", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "2", ",", 
         RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}], ",", "\n", "\t\t", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"v", "[", 
           RowBox[{"n", "-", "1"}], "]"}], "'"}], "[", "t", "]"}], "==", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"v", "[", 
                RowBox[{"n", "-", "2"}], "]"}], "[", "t", "]"}], "+", 
              RowBox[{
               RowBox[{"u", "[", 
                RowBox[{"n", "-", "2"}], "]"}], "[", "t", "]"}], "-", 
              RowBox[{
               RowBox[{"v", "[", 
                RowBox[{"n", "-", "1"}], "]"}], "[", "t", "]"}], "-", 
              RowBox[{
               RowBox[{"u", "[", 
                RowBox[{"n", "-", "1"}], "]"}], "[", "t", "]"}]}], ")"}], "/", 
            RowBox[{"r", "[", 
             RowBox[{"[", 
              RowBox[{"n", "-", "1"}], "]"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"u", "[", "n", "]"}], "[", "t", "]"}], "-", 
              RowBox[{
               RowBox[{"v", "[", 
                RowBox[{"n", "-", "1"}], "]"}], "[", "t", "]"}], "-", 
              RowBox[{
               RowBox[{"u", "[", 
                RowBox[{"n", "-", "1"}], "]"}], "[", "t", "]"}]}], ")"}], "/", 
            RowBox[{"r", "[", 
             RowBox[{"[", "n", "]"}], "]"}]}]}], ")"}], "/", 
         RowBox[{"c", "[", 
          RowBox[{"[", 
           RowBox[{"n", "-", "1"}], "]"}], "]"}]}]}], ",", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"u", "[", "n", "]"}], "'"}], "[", "t", "]"}], "==", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"v", "[", 
                RowBox[{"n", "-", "1"}], "]"}], "[", "t", "]"}], "+", 
              RowBox[{
               RowBox[{"u", "[", 
                RowBox[{"n", "-", "1"}], "]"}], "[", "t", "]"}], "-", 
              RowBox[{
               RowBox[{"u", "[", "n", "]"}], "[", "t", "]"}]}], ")"}], "/", 
            RowBox[{"r", "[", 
             RowBox[{"[", "n", "]"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"u", "[", 
                RowBox[{"n", "-", "1"}], "]"}], "[", "t", "]"}], "-", 
              RowBox[{
               RowBox[{"u", "[", "n", "]"}], "[", "t", "]"}]}], ")"}], "/", 
            RowBox[{"R", "[", 
             RowBox[{"[", "n", "]"}], "]"}]}]}], ")"}], "/", 
         RowBox[{"d", "[", 
          RowBox[{"[", "n", "]"}], "]"}]}]}]}], "}"}], ",", "\n", "\t\t", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Vcist", "[", "0", "]"}], "==", "100"}], "}"}], ",", "\n", 
     "\t\t", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"v", "[", "i", "]"}], "[", "0", "]"}], "==", "0"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}], ",", "\n", "\t\t", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"u", "[", "i", "]"}], "[", "0", "]"}], "\[Equal]", 
        "subaraP"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "\n", "\t\t\t", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"tperiod", "=", "5000"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"analPeriod", "=", 
   RowBox[{"20", " ", "tperiod"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"funcs", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", "Vcist", "}"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"v", "[", "i", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"u", "[", "i", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{"eqn", ",", "funcs", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "analPeriod"}], "}"}], ",", 
     RowBox[{"MaxSteps", "->", "3000000"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DuralTension", "[", "i_", "]"}], "[", "t_", "]"}], ":=", 
   RowBox[{"First", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"u", "[", "i", "]"}], "[", "t", "]"}], "/.", "sol"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SyrinxTension", "[", "i_", "]"}], "[", "t_", "]"}], ":=", 
   RowBox[{"First", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"v", "[", "i", "]"}], "[", "t", "]"}], "/.", "sol"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SubarachnoidFlow", "[", "i_", "]"}], "[", "t_", "]"}], ":=", 
   RowBox[{"First", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"u", "[", "i", "]"}], "[", "t", "]"}], "-", 
        RowBox[{
         RowBox[{"u", "[", 
          RowBox[{"i", "+", "1"}], "]"}], "[", "t", "]"}]}], ")"}], "/", 
      RowBox[{"R", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], "/.", "sol"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SyrinxFlow", "[", "i_", "]"}], "[", "t_", "]"}], ":=", 
   RowBox[{"First", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"v", "[", "i", "]"}], "[", "t", "]"}], "+", 
        RowBox[{
         RowBox[{"u", "[", "i", "]"}], "[", "t", "]"}], "-", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"i", "+", "1"}], "]"}], "[", "t", "]"}], "-", 
        RowBox[{
         RowBox[{"u", "[", 
          RowBox[{"i", "+", "1"}], "]"}], "[", "t", "]"}]}], ")"}], "/", 
      RowBox[{"r", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], "/.", "sol"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CanalFlow", "[", "i_", "]"}], "[", "t_", "]"}], " ", ":=", "  ", 
  RowBox[{"Which", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"i", " ", "==", "1"}], ",", 
    RowBox[{"First", "[", " ", 
     RowBox[{
      FractionBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Vob", "[", "t", "]"}], "-", 
         RowBox[{
          RowBox[{"u", "[", "1", "]"}], "[", "t", "]"}], "-", 
         RowBox[{
          RowBox[{"v", "[", "1", "]"}], "[", "t", "]"}]}], ")"}], 
       RowBox[{"r", "[", 
        RowBox[{"[", "1", "]"}], "]"}]], "/.", "sol"}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"i", "==", "n"}], ",", 
    RowBox[{"First", "[", 
     RowBox[{
      FractionBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"u", "[", 
           RowBox[{"n", "-", "1"}], "]"}], "[", "t", "]"}], "+", 
         RowBox[{
          RowBox[{"v", "[", 
           RowBox[{"n", "-", "1"}], "]"}], "[", "t", "]"}], "-", 
         RowBox[{
          RowBox[{"u", "[", "n", "]"}], "[", "t", "]"}]}], ")"}], 
       RowBox[{"r", "[", 
        RowBox[{"[", "n", "]"}], "]"}]], "/.", "sol"}], "]"}], ",", 
    "\[IndentingNewLine]", "True", ",", 
    RowBox[{"First", "[", 
     RowBox[{
      FractionBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"u", "[", 
           RowBox[{"i", "-", "1"}], "]"}], "[", "t", "]"}], "+", 
         RowBox[{
          RowBox[{"v", "[", 
           RowBox[{"i", "-", "1"}], "]"}], "[", "t", "]"}], "-", 
         RowBox[{
          RowBox[{"u", "[", "i", "]"}], "[", "t", "]"}], "-", 
         RowBox[{
          RowBox[{"v", "[", "i", "]"}], "[", "t", "]"}]}], ")"}], 
       RowBox[{"r", "[", 
        RowBox[{"[", "i", "]"}], "]"}]], "/.", "sol"}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}], "\n"}], "Input",
 CellChangeTimes->{{3.800228440808178*^9, 3.800228463272472*^9}, {
   3.8002285653292933`*^9, 3.8002285817605047`*^9}, {3.800228909977233*^9, 
   3.800228947304627*^9}, {3.8002334424737053`*^9, 3.800233451647087*^9}, {
   3.800233486479746*^9, 3.800233507374929*^9}, 3.800233542944676*^9, {
   3.800233605432768*^9, 3.800233607327117*^9}, 3.800233673672887*^9, {
   3.8002337414729633`*^9, 3.800233741622734*^9}, {3.800233871319921*^9, 
   3.800233897046885*^9}, {3.800235225729684*^9, 3.8002352259825077`*^9}, {
   3.8002353177847548`*^9, 3.800235330094655*^9}, {3.80023541344811*^9, 
   3.800235415262299*^9}, 3.8002357352643347`*^9, {3.800235803160632*^9, 
   3.800235819382579*^9}, {3.8002358594882936`*^9, 3.800235861430564*^9}, 
   3.800236232872891*^9, 3.800239547044306*^9, {3.8006499039286423`*^9, 
   3.800649911092924*^9}, {3.8006499450679493`*^9, 3.8006499713084993`*^9}, {
   3.800650008198184*^9, 3.8006500263702717`*^9}, {3.800650256643626*^9, 
   3.8006502568763933`*^9}, {3.800650313790423*^9, 3.800650314126532*^9}, {
   3.8152710372181787`*^9, 3.815271150567295*^9}, {3.815271283987389*^9, 
   3.8152713463929996`*^9}, {3.815271473292557*^9, 3.815271473512103*^9}, {
   3.815271800341997*^9, 3.8152718310516157`*^9}, {3.8152724772445097`*^9, 
   3.815272500040958*^9}, {3.8152725904783688`*^9, 3.815272597522492*^9}, {
   3.8152728180756903`*^9, 3.815272887724176*^9}, {3.81527298735806*^9, 
   3.815273054467681*^9}, {3.81527312407975*^9, 3.8152731310758333`*^9}, {
   3.815273332601536*^9, 3.815273340698041*^9}, {3.815273410382456*^9, 
   3.815273449583477*^9}, {3.81527352376376*^9, 3.815273524555592*^9}, {
   3.8152735598348703`*^9, 3.815273561078292*^9}, {3.815273993034374*^9, 
   3.815274088949831*^9}, {3.815274123508389*^9, 3.815274124454638*^9}, {
   3.8152759486117373`*^9, 3.81527595180538*^9}, {3.815276019819022*^9, 
   3.815276021633*^9}, {3.8152761396223288`*^9, 3.815276186999608*^9}, {
   3.815276318177744*^9, 3.815276318490047*^9}, {3.815276348976013*^9, 
   3.8152763499248466`*^9}, {3.815276393862204*^9, 3.815276397474099*^9}, {
   3.815276512917589*^9, 3.815276513230068*^9}, 3.8152766103801823`*^9, 
   3.815276648388528*^9, {3.815276683837049*^9, 3.815276694485505*^9}, 
   3.8152767383774557`*^9, {3.8152767767413197`*^9, 3.815276876658555*^9}, {
   3.815277029585155*^9, 3.815277070943426*^9}, {3.815277111809156*^9, 
   3.815277119750519*^9}, {3.815277166114937*^9, 3.815277281479426*^9}, {
   3.815277331056992*^9, 3.815277363750564*^9}, {3.815277446808195*^9, 
   3.815277592640534*^9}, {3.815277628664523*^9, 3.815277630142543*^9}, {
   3.8152776888877974`*^9, 3.815277709871014*^9}, {3.815277742519496*^9, 
   3.815277805725038*^9}, {3.8152778605345716`*^9, 3.815277962169593*^9}, {
   3.8152780218921413`*^9, 3.8152780221942453`*^9}, {3.815278106408388*^9, 
   3.815278153077261*^9}, 3.815341270847234*^9, {3.815341318205648*^9, 
   3.815341318700012*^9}, {3.8153413566022882`*^9, 3.8153414721935463`*^9}, {
   3.815341565448504*^9, 3.8153415943174343`*^9}, {3.815341624821805*^9, 
   3.815341688366123*^9}, {3.81534172172209*^9, 3.8153417407476377`*^9}, {
   3.815341775122154*^9, 3.81534192686204*^9}, {3.815341963779456*^9, 
   3.815342003436521*^9}, {3.815342040866457*^9, 3.8153420483804483`*^9}, {
   3.815342078728259*^9, 3.8153420933740273`*^9}, {3.815342125726596*^9, 
   3.815342363301358*^9}, {3.815342485094783*^9, 3.8153425538636703`*^9}, {
   3.81534263209007*^9, 3.815342641587367*^9}, {3.815342681150813*^9, 
   3.815342684065362*^9}, {3.815342823779131*^9, 3.815342832714621*^9}, 
   3.8153428634261427`*^9, 3.815343049053103*^9, {3.815343133818618*^9, 
   3.8153431944853287`*^9}, {3.815343226812304*^9, 3.81534328883678*^9}, {
   3.815343438443223*^9, 3.815343439407579*^9}, {3.815343472839835*^9, 
   3.8153434995738373`*^9}, {3.815343706274749*^9, 3.81534370996*^9}, {
   3.819594835537279*^9, 3.8195949016105223`*^9}, {3.819594943424086*^9, 
   3.8195949435776863`*^9}, {3.819748760576755*^9, 3.819748868232822*^9}, {
   3.8197489036019917`*^9, 3.819748911278357*^9}, {3.819748958136512*^9, 
   3.819748963812779*^9}, {3.8197490272991743`*^9, 3.819749047133651*^9}, 
   3.819749117416976*^9, {3.819749258772039*^9, 3.8197493402504683`*^9}, 
   3.819749381635693*^9, {3.819749530370146*^9, 3.819749530766555*^9}, {
   3.819749576234345*^9, 3.81974958043886*^9}, {3.819749648669249*^9, 
   3.819749648867684*^9}, {3.819759496887858*^9, 3.819759548039699*^9}, {
   3.8197595855078163`*^9, 3.819759588593761*^9}, {3.8197596684961042`*^9, 
   3.819759697199662*^9}, {3.819759864788776*^9, 3.819759866432312*^9}, {
   3.819766983448601*^9, 3.819767009192863*^9}, {3.8197670738375463`*^9, 
   3.819767108098757*^9}, {3.819767159383889*^9, 3.8197671619099407`*^9}, {
   3.819767270948028*^9, 3.8197672711733294`*^9}, {3.819767794541947*^9, 
   3.819768124244832*^9}, {3.8197681754964046`*^9, 3.819768181995401*^9}, {
   3.819768212625413*^9, 3.819768224712139*^9}, {3.819768258692644*^9, 
   3.8197682997282867`*^9}, {3.819768332335037*^9, 3.819768332526*^9}, {
   3.8197683909239607`*^9, 3.819768392762323*^9}, {3.819768522372307*^9, 
   3.8197685291551533`*^9}, {3.819768723555461*^9, 3.8197687251612873`*^9}, {
   3.820006661383265*^9, 3.820006662727725*^9}, {3.820006827313183*^9, 
   3.820006827507537*^9}, {3.82000690492432*^9, 3.820006913828801*^9}, {
   3.820009273846241*^9, 3.820009403035137*^9}, {3.8200095087711267`*^9, 
   3.820009516884736*^9}, {3.8200095588483686`*^9, 3.820009560477745*^9}, {
   3.820009615287182*^9, 3.8200096290440273`*^9}, {3.820009764007216*^9, 
   3.820009764919278*^9}, 3.820009797702242*^9, {3.820009875754044*^9, 
   3.820009888181964*^9}, {3.820010371166194*^9, 3.820010371294774*^9}, {
   3.820010533624475*^9, 3.820010533817306*^9}, {3.820010572260585*^9, 
   3.820010574136723*^9}, {3.820010605272427*^9, 3.820010665204754*^9}, {
   3.820010717874791*^9, 3.820010719703762*^9}, {3.820010769146607*^9, 
   3.820010769353167*^9}, {3.8200970980860786`*^9, 3.820097099538842*^9}, {
   3.820097415673397*^9, 3.820097603528425*^9}, {3.820097635681552*^9, 
   3.820097636937119*^9}, {3.8200976728556967`*^9, 3.820097675485387*^9}, {
   3.820097951116208*^9, 3.820097951736373*^9}, {3.8201132178170843`*^9, 
   3.8201132397487907`*^9}, {3.8201144484706907`*^9, 3.82011459371769*^9}, {
   3.820114652476035*^9, 3.820114657147211*^9}, {3.8201147127130833`*^9, 
   3.820114801912565*^9}, {3.8201156160997753`*^9, 3.820115618130663*^9}, {
   3.82011568408156*^9, 3.820115711667247*^9}, {3.820115762965621*^9, 
   3.820115765334785*^9}, 3.820115800687291*^9, {3.8201161873871317`*^9, 
   3.820116210236866*^9}, {3.8201163198978367`*^9, 3.820116338602624*^9}, {
   3.8201164537058077`*^9, 3.820116459663754*^9}, {3.820116523015429*^9, 
   3.820116524347781*^9}, {3.820116570701151*^9, 3.8201165831481028`*^9}, {
   3.820116657333323*^9, 3.8201167078127623`*^9}, {3.820119375724699*^9, 
   3.820119377702076*^9}, {3.820119450939261*^9, 3.820119451158401*^9}, {
   3.820119577149815*^9, 3.820119579960575*^9}, {3.820119643355453*^9, 
   3.820119643935343*^9}, 3.82011967589953*^9, {3.8201197155500317`*^9, 
   3.820119724852704*^9}, 3.820119784123362*^9, {3.82011985595385*^9, 
   3.8201198568200197`*^9}, {3.8201216212252207`*^9, 
   3.8201216227357473`*^9}, {3.820121779461625*^9, 3.82012178793122*^9}, {
   3.820121823667593*^9, 3.820121826047827*^9}, {3.820121890025237*^9, 
   3.820121890299034*^9}, {3.8201219216871967`*^9, 3.820121952847829*^9}, {
   3.8201219903824368`*^9, 3.820121994764471*^9}, {3.820122069898666*^9, 
   3.820122071299449*^9}, {3.820122155105092*^9, 3.820122155660613*^9}, {
   3.820122240905201*^9, 3.820122244096506*^9}, {3.820122305666643*^9, 
   3.8201223077993507`*^9}, {3.832365484998846*^9, 3.83236549713317*^9}, {
   3.8323655720977573`*^9, 3.832366031353551*^9}, {3.832366257737207*^9, 
   3.832366464101022*^9}, {3.832366618186908*^9, 3.8323666229392767`*^9}, {
   3.832366788726038*^9, 3.8323668119244137`*^9}, {3.832366888016489*^9, 
   3.832366902087545*^9}, {3.832366972028625*^9, 3.83236697407699*^9}, {
   3.832367576683097*^9, 3.832367578634656*^9}, {3.832367783675542*^9, 
   3.832367785340118*^9}, {3.8323679302907553`*^9, 3.832367930298959*^9}, {
   3.8323679984205503`*^9, 3.832368010481703*^9}, {3.832368308706072*^9, 
   3.832368490363809*^9}, {3.832368525554399*^9, 3.832368589462726*^9}, {
   3.832368895074443*^9, 3.832368899362462*^9}, {3.832370986319324*^9, 
   3.832371011151586*^9}, {3.83237112514049*^9, 3.832371194022873*^9}, {
   3.8323712503547173`*^9, 3.8323713169221153`*^9}, {3.832371606301528*^9, 
   3.83237174601403*^9}, {3.832371790200285*^9, 3.832371842962389*^9}, {
   3.8326338215907393`*^9, 3.832634042860731*^9}, {3.832634094643197*^9, 
   3.832634242758412*^9}, {3.832634279827063*^9, 3.832634320591276*^9}, {
   3.832634370782929*^9, 3.832634400545342*^9}, {3.8326344314192543`*^9, 
   3.832634455472241*^9}, {3.8326345264593277`*^9, 3.8326345268920517`*^9}, {
   3.832634637028039*^9, 3.832634653764325*^9}, {3.832634689868308*^9, 
   3.832634710825218*^9}, {3.832635126797586*^9, 3.832635181576775*^9}, {
   3.83263524636703*^9, 3.832635290873006*^9}, {3.832635333860434*^9, 
   3.83263533684149*^9}, {3.832635601732595*^9, 3.8326356028836613`*^9}, {
   3.8326356356129513`*^9, 3.8326356527389717`*^9}, {3.832635683626792*^9, 
   3.8326358401341133`*^9}, {3.832635917498708*^9, 3.832636013309374*^9}, {
   3.832636101276292*^9, 3.832636114764386*^9}, {3.832636184393173*^9, 
   3.83263635702238*^9}, {3.832794479684574*^9, 3.832794500580447*^9}, {
   3.832794548010459*^9, 3.832794550814506*^9}, {3.85508535371509*^9, 
   3.8550853539842176`*^9}, {3.855089575067506*^9, 3.855089697626919*^9}, {
   3.85509129128611*^9, 3.855091316239265*^9}, 3.8550913633750134`*^9, 
   3.855091457089367*^9, {3.8550915556964827`*^9, 3.855091556071076*^9}, {
   3.855686992210538*^9, 3.855687032527502*^9}, {3.855687072062014*^9, 
   3.855687150579378*^9}, 3.8556878550415297`*^9, {3.855705297300115*^9, 
   3.855705298736329*^9}, 3.85570536405298*^9, {3.855705407818844*^9, 
   3.855705409425802*^9}, {3.8557083027598886`*^9, 3.855708303100668*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"d0555d94-fb64-4e8f-b9bf-25161a7ab3b9"],

Cell[BoxData["2666.4400000000005`"], "Output",
 CellChangeTimes->{
  3.855705410213942*^9, 3.8557057355671577`*^9, {3.8557082851593227`*^9, 
   3.8557083039774437`*^9}, 3.8557083390193043`*^9, 3.8557084756950006`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"59c157b7-2d87-4c01-8666-a2cac27af9d2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "Null", "}"}], ",", 
   RowBox[{"{", "\[Placeholder]", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.855705410213942*^9, 3.8557057355671577`*^9, {3.8557082851593227`*^9, 
   3.8557083039774437`*^9}, 3.8557083390193043`*^9, 3.855708475698351*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"d06ad8b3-7b75-4bb1-9d96-5762683d624b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"canalWave", "=", 
   RowBox[{"Animate", "[", 
    RowBox[{
     RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"100", 
              RowBox[{
               RowBox[{
                RowBox[{"DuralTension", "[", "i", "]"}], "[", "t", "]"}], "/",
                "13332.2"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}], ",", "       ", 
         RowBox[{"(*", " ", 
          RowBox[{"Dural", " ", "Tension"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{
              RowBox[{"SyrinxTension", "[", "i", "]"}], "[", "t", "]"}]}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}], ",", "       ", 
         RowBox[{"(*", 
          RowBox[{"syrinx", " ", "tension"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"2000", 
              RowBox[{
               RowBox[{"SubarachnoidFlow", "[", "i", "]"}], "[", "t", 
               "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}], ",", "   ", 
         RowBox[{"(*", 
          RowBox[{"subarachnoid", " ", "flow"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"100000000000", 
              RowBox[{
               RowBox[{"CanalFlow", "[", "i", "]"}], "[", "t", "]"}]}]}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "   ", 
        RowBox[{"(*", " ", 
         RowBox[{"Central", " ", "Canal", " ", "Flow"}], " ", "*)"}], 
        "\[IndentingNewLine]", "}"}], ",", "  ", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"range1", " ", "=", " ", "200"}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "range1"}], ",", "range1"}], "}"}]}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Dural Tension\>\"", ",", "\"\<Syrinx Tenxion\>\"", ",", 
          "\"\<Subarachnoid Flow\>\"", ",", "\"\<CanalFlow\>\""}], "}"}]}]}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "analPeriod"}], "}"}], ",", 
     RowBox[{"AnimationRate", "\[Rule]", "tperiod"}]}], "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.800228440808178*^9, 3.800228463272472*^9}, {
   3.8002285653292933`*^9, 3.8002285817605047`*^9}, {3.800228909977233*^9, 
   3.800228947304627*^9}, {3.8002334424737053`*^9, 3.800233451647087*^9}, {
   3.800233486479746*^9, 3.800233507374929*^9}, 3.800233542944676*^9, {
   3.800233605432768*^9, 3.800233607327117*^9}, 3.800233673672887*^9, {
   3.8002337414729633`*^9, 3.800233741622734*^9}, {3.800233871319921*^9, 
   3.800233897046885*^9}, {3.800235225729684*^9, 3.8002352259825077`*^9}, {
   3.8002353177847548`*^9, 3.800235330094655*^9}, {3.80023541344811*^9, 
   3.800235415262299*^9}, 3.8002357352643347`*^9, {3.800235803160632*^9, 
   3.800235819382579*^9}, {3.8002358594882936`*^9, 3.800235861430564*^9}, 
   3.800236232872891*^9, 3.800239547044306*^9, {3.8006499039286423`*^9, 
   3.800649911092924*^9}, {3.8006499450679493`*^9, 3.8006499713084993`*^9}, {
   3.800650008198184*^9, 3.8006500263702717`*^9}, {3.800650256643626*^9, 
   3.8006502568763933`*^9}, {3.800650313790423*^9, 3.800650314126532*^9}, {
   3.8152710372181787`*^9, 3.815271150567295*^9}, {3.815271283987389*^9, 
   3.8152713463929996`*^9}, {3.815271473292557*^9, 3.815271473512103*^9}, {
   3.815271800341997*^9, 3.8152718310516157`*^9}, {3.8152724772445097`*^9, 
   3.815272500040958*^9}, {3.8152725904783688`*^9, 3.815272597522492*^9}, {
   3.8152728180756903`*^9, 3.815272887724176*^9}, {3.81527298735806*^9, 
   3.815273054467681*^9}, {3.81527312407975*^9, 3.8152731310758333`*^9}, {
   3.815273332601536*^9, 3.815273340698041*^9}, {3.815273410382456*^9, 
   3.815273449583477*^9}, {3.81527352376376*^9, 3.815273524555592*^9}, {
   3.8152735598348703`*^9, 3.815273561078292*^9}, {3.815273993034374*^9, 
   3.815274088949831*^9}, {3.815274123508389*^9, 3.815274124454638*^9}, {
   3.8152759486117373`*^9, 3.81527595180538*^9}, {3.815276019819022*^9, 
   3.815276021633*^9}, {3.8152761396223288`*^9, 3.815276186999608*^9}, {
   3.815276318177744*^9, 3.815276318490047*^9}, {3.815276348976013*^9, 
   3.8152763499248466`*^9}, {3.815276393862204*^9, 3.815276397474099*^9}, {
   3.815276512917589*^9, 3.815276513230068*^9}, 3.8152766103801823`*^9, 
   3.815276648388528*^9, {3.815276683837049*^9, 3.815276694485505*^9}, 
   3.8152767383774557`*^9, {3.8152767767413197`*^9, 3.815276876658555*^9}, {
   3.815277029585155*^9, 3.815277070943426*^9}, {3.815277111809156*^9, 
   3.815277119750519*^9}, {3.815277166114937*^9, 3.815277281479426*^9}, {
   3.815277331056992*^9, 3.815277363750564*^9}, {3.815277446808195*^9, 
   3.815277592640534*^9}, {3.815277628664523*^9, 3.815277630142543*^9}, {
   3.8152776888877974`*^9, 3.815277709871014*^9}, {3.815277742519496*^9, 
   3.815277805725038*^9}, {3.8152778605345716`*^9, 3.815277962169593*^9}, {
   3.8152780218921413`*^9, 3.8152780221942453`*^9}, {3.815278106408388*^9, 
   3.815278153077261*^9}, 3.815341270847234*^9, {3.815341318205648*^9, 
   3.815341318700012*^9}, {3.8153413566022882`*^9, 3.8153414721935463`*^9}, {
   3.815341565448504*^9, 3.8153415943174343`*^9}, {3.815341624821805*^9, 
   3.815341688366123*^9}, {3.81534172172209*^9, 3.8153417407476377`*^9}, {
   3.815341775122154*^9, 3.81534192686204*^9}, {3.815341963779456*^9, 
   3.815342003436521*^9}, {3.815342040866457*^9, 3.8153420483804483`*^9}, {
   3.815342078728259*^9, 3.8153420933740273`*^9}, {3.815342125726596*^9, 
   3.815342363301358*^9}, {3.815342485094783*^9, 3.8153425538636703`*^9}, {
   3.81534263209007*^9, 3.815342641587367*^9}, {3.815342681150813*^9, 
   3.815342684065362*^9}, {3.815342823779131*^9, 3.815342832714621*^9}, 
   3.8153428634261427`*^9, 3.815343049053103*^9, {3.815343133818618*^9, 
   3.8153431944853287`*^9}, {3.815343226812304*^9, 3.81534328883678*^9}, {
   3.815343438443223*^9, 3.815343439407579*^9}, {3.815343472839835*^9, 
   3.8153434995738373`*^9}, {3.815343706274749*^9, 3.81534370996*^9}, {
   3.819594835537279*^9, 3.8195949016105223`*^9}, {3.819594943424086*^9, 
   3.8195949435776863`*^9}, {3.819748760576755*^9, 3.819748868232822*^9}, {
   3.8197489036019917`*^9, 3.819748911278357*^9}, {3.819748958136512*^9, 
   3.819748963812779*^9}, {3.8197490272991743`*^9, 3.819749047133651*^9}, 
   3.819749117416976*^9, {3.819749258772039*^9, 3.8197493402504683`*^9}, 
   3.819749381635693*^9, {3.819749530370146*^9, 3.819749530766555*^9}, {
   3.819749576234345*^9, 3.81974958043886*^9}, {3.819749648669249*^9, 
   3.819749648867684*^9}, {3.819759496887858*^9, 3.819759548039699*^9}, {
   3.8197595855078163`*^9, 3.819759588593761*^9}, {3.8197596684961042`*^9, 
   3.819759697199662*^9}, {3.819759864788776*^9, 3.819759866432312*^9}, {
   3.819766983448601*^9, 3.819767009192863*^9}, {3.8197670738375463`*^9, 
   3.819767108098757*^9}, {3.819767159383889*^9, 3.8197671619099407`*^9}, {
   3.819767270948028*^9, 3.8197672711733294`*^9}, {3.819767794541947*^9, 
   3.819768124244832*^9}, {3.8197681754964046`*^9, 3.819768181995401*^9}, {
   3.819768212625413*^9, 3.819768224712139*^9}, {3.819768258692644*^9, 
   3.8197682997282867`*^9}, {3.819768332335037*^9, 3.819768332526*^9}, {
   3.8197683909239607`*^9, 3.819768392762323*^9}, {3.819768522372307*^9, 
   3.8197685291551533`*^9}, {3.819768723555461*^9, 3.8197687251612873`*^9}, {
   3.820006661383265*^9, 3.820006662727725*^9}, {3.820006827313183*^9, 
   3.820006827507537*^9}, {3.82000690492432*^9, 3.820006913828801*^9}, {
   3.820009273846241*^9, 3.820009403035137*^9}, {3.8200095087711267`*^9, 
   3.820009516884736*^9}, {3.8200095588483686`*^9, 3.820009560477745*^9}, {
   3.820009615287182*^9, 3.8200096290440273`*^9}, {3.820009764007216*^9, 
   3.820009764919278*^9}, 3.820009797702242*^9, {3.820009875754044*^9, 
   3.820009888181964*^9}, {3.820010371166194*^9, 3.820010371294774*^9}, {
   3.820010533624475*^9, 3.820010533817306*^9}, {3.820010572260585*^9, 
   3.820010574136723*^9}, {3.820010605272427*^9, 3.820010665204754*^9}, {
   3.820010717874791*^9, 3.820010719703762*^9}, {3.820010769146607*^9, 
   3.820010769353167*^9}, {3.8200970980860786`*^9, 3.820097099538842*^9}, {
   3.820097415673397*^9, 3.820097603528425*^9}, {3.820097635681552*^9, 
   3.820097636937119*^9}, {3.8200976728556967`*^9, 3.820097675485387*^9}, {
   3.820097951116208*^9, 3.820097951736373*^9}, {3.8201132178170843`*^9, 
   3.8201132397487907`*^9}, {3.8201144484706907`*^9, 3.82011459371769*^9}, {
   3.820114652476035*^9, 3.820114657147211*^9}, {3.8201147127130833`*^9, 
   3.820114801912565*^9}, {3.8201156160997753`*^9, 3.820115618130663*^9}, {
   3.82011568408156*^9, 3.820115711667247*^9}, {3.820115762965621*^9, 
   3.820115765334785*^9}, 3.820115800687291*^9, {3.8201161873871317`*^9, 
   3.820116210236866*^9}, {3.8201163198978367`*^9, 3.820116338602624*^9}, {
   3.8201164537058077`*^9, 3.820116459663754*^9}, {3.820116523015429*^9, 
   3.820116524347781*^9}, {3.820116570701151*^9, 3.8201165831481028`*^9}, {
   3.820116657333323*^9, 3.8201167078127623`*^9}, {3.820119375724699*^9, 
   3.820119377702076*^9}, {3.820119450939261*^9, 3.820119451158401*^9}, {
   3.820119577149815*^9, 3.820119579960575*^9}, {3.820119643355453*^9, 
   3.820119643935343*^9}, 3.82011967589953*^9, {3.8201197155500317`*^9, 
   3.820119724852704*^9}, 3.820119784123362*^9, {3.82011985595385*^9, 
   3.8201198568200197`*^9}, {3.8201216212252207`*^9, 
   3.8201216227357473`*^9}, {3.820121779461625*^9, 3.82012178793122*^9}, {
   3.820121823667593*^9, 3.820121826047827*^9}, {3.820121890025237*^9, 
   3.820121890299034*^9}, {3.8201219216871967`*^9, 3.820121952847829*^9}, {
   3.8201219903824368`*^9, 3.820121994764471*^9}, {3.820122069898666*^9, 
   3.820122071299449*^9}, {3.820122155105092*^9, 3.820122155660613*^9}, {
   3.820122240905201*^9, 3.820122244096506*^9}, {3.820122305666643*^9, 
   3.8201223077993507`*^9}, {3.832365484998846*^9, 3.83236549713317*^9}, {
   3.8323655720977573`*^9, 3.832366031353551*^9}, {3.832366257737207*^9, 
   3.832366464101022*^9}, {3.832366618186908*^9, 3.8323666229392767`*^9}, {
   3.832366788726038*^9, 3.8323668119244137`*^9}, {3.832366888016489*^9, 
   3.832366902087545*^9}, {3.832366972028625*^9, 3.83236697407699*^9}, {
   3.832367576683097*^9, 3.832367578634656*^9}, {3.832367783675542*^9, 
   3.832367785340118*^9}, {3.8323679302907553`*^9, 3.832367930298959*^9}, {
   3.8323679984205503`*^9, 3.832368010481703*^9}, {3.832368308706072*^9, 
   3.832368490363809*^9}, {3.832368525554399*^9, 3.832368589462726*^9}, {
   3.832368895074443*^9, 3.832368899362462*^9}, {3.832370986319324*^9, 
   3.832371011151586*^9}, {3.83237112514049*^9, 3.832371194022873*^9}, {
   3.8323712503547173`*^9, 3.8323713169221153`*^9}, {3.832371606301528*^9, 
   3.83237174601403*^9}, {3.832371790200285*^9, 3.832371842962389*^9}, {
   3.8326338215907393`*^9, 3.832634042860731*^9}, {3.832634094643197*^9, 
   3.832634242758412*^9}, {3.832634279827063*^9, 3.832634320591276*^9}, {
   3.832634370782929*^9, 3.832634400545342*^9}, {3.8326344314192543`*^9, 
   3.832634455472241*^9}, {3.8326345264593277`*^9, 3.8326345268920517`*^9}, {
   3.832634637028039*^9, 3.832634653764325*^9}, {3.832634689868308*^9, 
   3.832634710825218*^9}, {3.832635126797586*^9, 3.832635181576775*^9}, {
   3.83263524636703*^9, 3.832635290873006*^9}, {3.832635333860434*^9, 
   3.83263533684149*^9}, {3.832635601732595*^9, 3.8326356028836613`*^9}, {
   3.8326356356129513`*^9, 3.8326356527389717`*^9}, {3.832635683626792*^9, 
   3.8326358401341133`*^9}, {3.832635917498708*^9, 3.832636013309374*^9}, {
   3.832636101276292*^9, 3.832636114764386*^9}, {3.832636184393173*^9, 
   3.83263635702238*^9}, {3.832794479684574*^9, 3.832794500580447*^9}, {
   3.832794548010459*^9, 3.832794550814506*^9}, {3.85508535371509*^9, 
   3.8550853539842176`*^9}, {3.855089575067506*^9, 3.855089697626919*^9}, {
   3.85509129128611*^9, 3.855091316239265*^9}, 3.8550913633750134`*^9, 
   3.855091457089367*^9, {3.8550915556964827`*^9, 3.855091556071076*^9}, {
   3.855686992210538*^9, 3.855687032527502*^9}, {3.855687072062014*^9, 
   3.855687150579378*^9}, 3.8556878550415297`*^9, {3.855705297300115*^9, 
   3.855705298736329*^9}, {3.85570536405298*^9, 3.855705371029737*^9}, {
   3.855708498638776*^9, 3.8557085091469097`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"b8193ec1-b808-47ae-9365-132966821731"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 75974.67422485352, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"\:540d\:79f0\:672a\:5b9a\:7fa9\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 100000}}, Typeset`size$$ = {
    529., {108., 113.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListLinePlot[{
         Table[{$CellContext`i, 
           100 ($CellContext`DuralTension[$CellContext`i][$CellContext`t$$]/
            13332.2)}, {$CellContext`i, 1, $CellContext`n - 1}], 
         Table[{$CellContext`i, 
           $CellContext`SyrinxTension[$CellContext`i][$CellContext`t$$]}, \
{$CellContext`i, 1, $CellContext`n - 1}], 
         Table[{$CellContext`i, 
           2000 $CellContext`SubarachnoidFlow[$CellContext`i][$CellContext`t$$\
]}, {$CellContext`i, 1, $CellContext`n - 1}], 
         Table[{$CellContext`i, 
           100000000000 \
$CellContext`CanalFlow[$CellContext`i][$CellContext`t$$]}, {$CellContext`i, 
           1, $CellContext`n}]}, $CellContext`range1 = 200; 
        PlotRange -> {-$CellContext`range1, $CellContext`range1}, 
        PlotLegends -> {
         "Dural Tension", "Syrinx Tenxion", "Subarachnoid Flow", 
          "CanalFlow"}], 
      "Specifications" :> {{$CellContext`t$$, 0, 100000, AnimationRate -> 
         5000, AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{576., {144., 150.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.8201201003503723`*^9, 3.82012018849771*^9, 3.820121623589233*^9, 
   3.82012179018458*^9, 3.820121826784144*^9, 3.820121891933462*^9, 
   3.8201219236168613`*^9, 3.820121954386594*^9, 3.820121995679117*^9, 
   3.8201220721115932`*^9, 3.820122157101282*^9, 3.820122245197523*^9, 
   3.8201223081692877`*^9, 3.832366530389101*^9, 3.8323665625893593`*^9, 
   3.8323666415853662`*^9, {3.832366827532241*^9, 3.832366854449493*^9}, 
   3.8323669822947206`*^9, 3.832367210390923*^9, 3.832367599666643*^9, 
   3.8323678012209263`*^9, 3.832368909651512*^9, {3.832370987665494*^9, 
   3.832371011945211*^9}, 3.832371194917742*^9, 3.832371226053581*^9, 
   3.832371317811116*^9, 3.832371762044178*^9, 3.832371853148802*^9, 
   3.832633725802804*^9, 3.8326342569631844`*^9, {3.832634344085196*^9, 
   3.832634456120164*^9}, 3.832634528301982*^9, {3.832634640436366*^9, 
   3.832634654324821*^9}, {3.832634690869323*^9, 3.832634711470646*^9}, {
   3.832635127918277*^9, 3.832635182394998*^9}, 3.832635251500272*^9, 
   3.832635291968186*^9, 3.832635337202532*^9, {3.8326356149049664`*^9, 
   3.8326356533353233`*^9}, {3.832635721062779*^9, 3.8326358408388853`*^9}, 
   3.8326359806258097`*^9, 3.832636015001082*^9, 3.8326361159923553`*^9, {
   3.832636225558189*^9, 3.832636357736767*^9}, 3.832642724367116*^9, 
   3.83264336269728*^9, 3.832643782863028*^9, 3.832794512045949*^9, 
   3.8327945524709787`*^9, 3.855085284669137*^9, 3.855085355193028*^9, 
   3.85508961962346*^9, {3.855089651137372*^9, 3.855089698516366*^9}, {
   3.855091298145776*^9, 3.855091317961885*^9}, 3.855091364671194*^9, 
   3.855091458233218*^9, 3.855091556704114*^9, 3.855688036009171*^9, 
   3.8557052998507338`*^9, 3.8557053720685053`*^9, 3.855705416458037*^9, {
   3.8557084836619864`*^9, 3.855708510889903*^9}},
 CellLabel->"Out[37]=",ExpressionUUID->"83d16af5-6bf0-4311-a340-e8073dac4142"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"normalWaves", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"100", 
              RowBox[{
               RowBox[{
                RowBox[{"DuralTension", "[", "i", "]"}], "[", "t", "]"}], "/",
                "13332.2"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}], ",", "       ", 
         RowBox[{"(*", " ", 
          RowBox[{"Dural", " ", "Tension"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{
              RowBox[{"SyrinxTension", "[", "i", "]"}], "[", "t", "]"}]}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}], ",", "       ", 
         RowBox[{"(*", 
          RowBox[{"syrinx", " ", "tension"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"2000", 
              RowBox[{
               RowBox[{"SubarachnoidFlow", "[", "i", "]"}], "[", "t", 
               "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}], ",", "   ", 
         RowBox[{"(*", 
          RowBox[{"subarachnoid", " ", "flow"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"100000000000", 
              RowBox[{
               RowBox[{"CanalFlow", "[", "i", "]"}], "[", "t", "]"}]}]}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "   ", 
        RowBox[{"(*", " ", 
         RowBox[{"Central", " ", "Canal", " ", "Flow"}], " ", "*)"}], 
        "\[IndentingNewLine]", "}"}], ",", "  ", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"range1", " ", "=", " ", "200"}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "range1"}], ",", "range1"}], "}"}]}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Dural Tension\>\"", ",", "\"\<Syrinx Tenxion\>\"", ",", 
          "\"\<Subarachnoid Flow\>\"", ",", "\"\<CanalFlow\>\""}], "}"}]}]}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"10", "tperiod"}], ",", 
       RowBox[{"15", "tperiod"}], ",", "100"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.855691158660136*^9, 3.85569116175424*^9}, 
   3.855691216713458*^9, {3.855708532383421*^9, 3.855708545190633*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"0b85cdf1-1faf-41cc-bb91-63d4990f1321"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</home/chang/Dropbox/Projects/MRI_flow/mathematica/new_analysis/\
normalWaves.mp4\>\"", ",", "normalWaves"}], "]"}]], "Input",
 CellChangeTimes->{{3.85569129525113*^9, 3.855691328681984*^9}, {
  3.855708648724811*^9, 3.855708655940052*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"859cb199-5314-4b04-ab17-a8bacfe51fa0"],

Cell[BoxData["\<\"/home/chang/Dropbox/Projects/MRI_flow/mathematica/new_\
analysis/normalWaves.mp4\"\>"], "Output",
 CellChangeTimes->{3.855691353478045*^9, 3.855708682688945*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"04e0d28c-6218-4f7a-aa71-f486af043c70"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"subaraWaveforms", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"SubarachnoidFlow", "[", "5", "]"}], "[", "t", "]"}], ",", 
      RowBox[{
       RowBox[{"SubarachnoidFlow", "[", "20", "]"}], "[", "t", "]"}]}], "}"}],
     ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", 
      RowBox[{"10", "*", "5000"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.832794615465365*^9, 3.8327947026249657`*^9}, {
  3.8327947696204576`*^9, 3.832794786659073*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"b3855349-f648-496c-9af9-2db696fd7a6d"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
5JKAXZmu9XDMnWf3SR0C/WOrXNK9T36fz3fg9QUCeR5tvHvdt57Mp235jb4E
Ek7sYIsOqgdT2ttdk/EECmEfvN/wvJ7Mn5f7pz+R/j02xrUUVQ/9beuOtQ4S
KCpxxlMpoR5EE6a2vvpNoHUcC3ymafVk/v8mu0eIiVKPcTxyz6uHkwmXcj4R
TKSZJCD8obQerr88Naa4jomKOCSedNXUk/Vq+sHJzUy034whxsuqh8b+utsO
pF/rk+SD1Xvqyf0522pC+tWUcz3FaqgethW9RhKkX3vMNj/1m6yHlC+SvbGk
X89+0KLl/Kwn+/W1Fgrp1wnOvS++LtXDwMnBy+aqTHT5+CGmOHcDeBT9nrwh
z0QLH0xfaws3kP2hPv+SJBO5c1nK2lEaYAtz/sRuDibiMz8f/ZTZAK5fK2/+
nCTQk2RHxTLFBph4aPnKg/S8FPeN9983NICGmf+DP9kEijC/t5a5tQGEn6z+
ZvycQIopXgm62g1gd01hZ6gLgRK5AzZc39cAP404T5YdIdBmi2fJUQYN5HyE
7x5SJtAunri0RcsGMp8+HOBpYaAqi9QtShca4APH2mMSUQx0ODUny+RSA1xe
vfumvCMDnTpRnZd0r4HcX6OB5/7S0XBq884urwbYTgelt0V05MjbjXkCGiDq
Ss/nZTc6uv1xovRUZAP0yQX/lP9DQ5x8P/f6xTZAc9GM/t8UGvI9ufQpO6UB
jtbp/hM5T0PP+IRrxYobIJ+6rYKjkooyLFVYpYMNZH0zPiluL41cvQaMrMca
wKix/Bc/RRpBSlADxwx5Pzp1a1ueFBp2u/VVhq0Rnt08s0WEUwpdbu4fOCXS
CI9/33b57SKJfK7FtvduaIRO48vCywJiaNLHPSxpYyN8dzff/jxUFBlEmJve
2dII6cflzd+vFEWSn4RaiJ2NkKdxyeeB2QoUSXWut9BvhFWMHVzODgIoO29b
eadtI/hulZDYv5oDMRrFH8Y5NsL0FbHmBEl2dHdoYtfNy40wEopCr7GzoT3C
EUVU10Yyr/GcgaRF7QZLjvxjPo1wh33mtMXQrPYwe83H1veNZP7OrNydmKJN
OXAismmoERrMTN7NrmHHIR8yJ3+MNsLc3fsj9w5zYEmK2DapqUaIGdOq57nB
iSU/lzeZzzWCYPfF1W4F3Fj8tirnEHcTZAw0C0WuF8BBn30MeQSaoH08duGm
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
CWVlbqnmTHzmhD+vH7HB1qDAq2kREycmdXe1LmaD6uaC614OTByXHD3waAkb
6qbsSTAg/Bd1cspovtNkPjzfLSZ8uOtUqnjicjasGHAWXbNl4m2nKdkwFzZs
+jQ8zd2Cif1SilQ8XNnA4Ze3LDFh4vVnFupYrGSD/Fejx0d1mXjV2drpdHc2
4bMxpKjGxMtS3eZMeLChaKbJUz7hQYe0T6Z8TzaYJ1U9kvtJYYv0rZYv1rJB
Zoffk/hWCpuc67MvXc8GvdbNc1xqKDzzfKzTOW82/JW4tmvbFQpTF2RWRvuw
yX5UoL4epbBGxvm1m3zZhNecnt8MoLDCRV1fRz82DBn35rbYU3hK5u3AOf5E
j3fY1BZtCg9mPdvbH8iGPwrZc4ufMHD3JY+Y1iA2pDn739p9noH52d+OPNrO
BpOPi5IKAhn4fe5g6vEwNhxdvc5xzygdf1m+uP3cTqL/Zd+yDWvomN2fMvfq
bjZYLxqJHIql426nOS9ZEWziTze94v2i4YHeCJ3XkWxYPPE8UrOYhoezard9
3c+GHe5H9kZvpuEpPRskhw+y4eAOxw2DWAfLZRaulo5jE/67lDlthw5WcfyV
pxHPhjWVulSupg5mZpy2m59A9N12OKjGXxtbOuDI0NNsiPDJl7v+SRPbdcg/
iz7DhvsmyVknwzWxY7q32olUNlQ7fFXXkdbE7sL+0mvn2cAUWVAbjDRw8JmZ
Hd9y2FAZ+ebOC281nNWW7ONewobLCdw3BXcVcH5Sa9GmO0S/p6JHNlyVx4Xm
M/6E3WXD2aoTMbKpcrgssfpcUjkbjG99zGnaIoNfmvY2Pq5hw6Eb8XLenZJ4
LG4tWviGDYEVkDDFZIi1efr0mbReNsQ/jT6Tur7fYaHD+vlT+tlw6zR/SXfq
Lwe5TSkOvQNsyA62Ug57MeRQcemvd91vNjR5j6uNLhh1UNL6lLJnnE32m0M9
3ieOqhXS/rxQ5ABTcUqQ+gdZlG7cMKVcmQNLqn5IDbXIoeAVE6r5qhxQ2GL/
yrlFHmkk7TSJ0uSAkpacm+CVIgqTXBGgz+TAJqnbgXNfqSD6qMSrGBMOOA3V
eS5cpoH6dGw+BZlyYOMf82urSzTQc6s9Ag8zDkh7BZrsV9NEeyPbJ2Yv5ECN
U4ba/VZN9KLv0cL3thwI6lcoH3QiPKj8azHLnkPmAXL3yNFG+0yN3G8iDtHv
3es7+rSR7o7MkMNLOODicEqrPk0HRYv2XTZ25cB050de5pU0tEr6drHWSg6s
se5QxH9paOYsXqW4Oweicv5WvbOjo+Ytq99/9OSAbP4Z6agHdFR4JIn9ZC0H
yhVD/xvpo6PYfPyzZD0HNpx17+yew0Bz2ubKJPhwIFUj2VXxDAONjW3V3O3L
AW+LbxvNahjoHSNH38ePA09nPDx2p5OBimzez3Py58Cr8sGyRHUKxW2Qszfb
woEHjwM/37UhPBi9eAVjKwf0vjO7TDZTyOhitJf0Ng78s58VOhhPIbGKO1v7
t3OIX48LkcqnUOsH4Z5vIRw4ZjxrzLeaQlU5bXV9YRzCF1ttJj5S6PLWVprU
Lg50eXWYb++j0FGTNztp4Rzg1eUdSZdiou2DdY/n7uWQeSb9OU6bidyqazQd
93FgWs/fbsPZTGSWUB6yPopD+Grx77T5TKThVlITGs2Bt9v26FQsYqJh9euq
h2M48Fsq6cwFByb69jUn6FwsB1YpqZ2bR3ix9tr5hzfiOHA/USL3GHm/IOy0
YnU8BzYL15ilk/uTFyQENB8lerK4r+xLPn/X34Pl/AQO2B2t+ceZxUSeTyNk
RxI5MHD2lGgmic/yVNgmxWSij71f/5tN4qevCbyrd4oDktTSE529FBqnb5Sy
TOHAixjfzN3k/Fyu54YVZznguCBx66NHFHp+a0WJXxoHLvAjdjTnUKh4r6N4
xDkSz841PmUxFEq1sVl34sJk/Vd+2rqOQvskzG9mX5yMN+36DxMK2aXrrX6W
zSH70TAsmfC+rg/t+qdcDhR8TWHdymegKfqqI915JJ+fFhXfD2OgxrtiVzQL
OLA2yGjo0jAd/XdgeNCwkOhPvsw3oYqOzi/uc3Yo4hAeHlIJP0BHm9629227
zYHEn8eu7eihIcesj0sPlnKIv+xzTimgodkBTZln/+PAKe09W5u8aKinjwWV
9zmgJWEx5Wu5DopTuZwqW8MBIcdNU3O1Ntry6QKfiTkwI6391tJ+LbQsP8Xa
/PFkvcYZvDNaSNnsENunjgOXvZols55oonx3X7PbrzngEaXMmqeogRK01ybU
NnGgrP/7PfoldRTc7vrpw1sODP7hL/kwUx3N320b/6+FA+5PPKpEC9TQkzP0
5lVtHCjRU81WtlFB/Nefdvf3ED2dr7NVFE5FmXKPjnL7JvXc/FX1izRyW557
4f0Ah/BxTc/XV1Lofm3Ao/Lfk3qz2GV4UxIdu9clHTPOIby6+8rC7HEH/ayx
XAklLvET9tPBq9PBf6tuo/pcLtwIn5b4X+kflsYVifYp87iE9z5uUu8aYTV8
5/cPmZHXBtmcHv0xlpnXTe1PC7mwTP/7ZdoyMTzhYh6YY8eFwZdnF0VnT8GX
5y0dnenGhby7dm4W7QrYc8dsRa1VXMKjqpfkvili6ZsyulM9uKBYjUJ/tyjh
XfqvnTrXcMl50iq8/FWwveb6tJKNXDIv1lHJVmr42+h2A8swLsikx+iOpGji
fcFvY5k7ueB3Okei5acmVmy1eTtlN5f4s/aiq65a2OGuYsz7vVzQXGXi2iem
jVun7X9TtY8L62jLev28tfHu02z9q1FcSP7W5Jhboo3zt997FR7DJfrsyw1Z
rYOtWyhd71gumOle+SfK08FvHRP3oTgudFvvstDu1sES0zYwlY5yQe30+5wd
h2g48MP4ruJkLlQdOxJjdYyOxxYHP00/xSX+a96qoyw6Pn/nrXZMChcWHw5Q
dv1Dx89OFtQ6p3GhQbe4YnEAA/sOK2qanePCK2X/4aB0Bh4K2h+ifYELwSY6
OwdrGXj24hVqwkySr86TIQ5aFGaV3tv2+hIXwpwD/AbsKOxFMR/dz+HCKtvh
m2KEN/qSE5VzLnPJvo3PCyI8kvSnN/BYPhca7dwspxFe0Q3aUBl6lQv4y5+m
OYRnHr57ouBZwAW5UVbTYcI7nmASsKiQC9MjaVkzCA91lVwo1y3iknmwl6Mi
zsRHGROyMre4cNGNrrWM8BQjOdivt5hL5u+N6seEt+7/flvWWsIFz7t3fY4S
HnPbajuVdYcLfUf4SYmE1/hvCzZev8sl/iwt/TXhuUNI6b/T97jEDxfreRHe
0yrZP2VfORc+zxKx9QkPltI53hsfcCE+4+ohM8KLy5JWlDg+nNSTs0Y84cn2
oXviRo+40NaAPNUIb0YHMter1nDBrXBlj2gOE6u8Tbw1zJrM38Ub4oRXixz6
xttrubD9ugT2l2diuL1hTf0Tcv17o6/SI4SfaU9vlD7jQjH4Xx/iUXjPCZOx
C8+5hI/ms00bKSw3dMHjUAMX/n47++P+XQpf3TJRsPUlFxJ3WgWePE9hm+bg
EddGov9Thry7+yj8zv7dygVvuLB+9KWTqSeFQ4ttr9KbJ/ttZFxiLoUladd/
i7/jwpyAh1kLpCi8cHB/XnMLl8wXS4kHJQzcGMD59eAjF85vSpihFsfAQU0r
nPM+E33m18V8dmXgjFvM/p3fubAx1247bqdjU50TTuvaubDJ28i/4zod1x/v
y7LjkPo05DWmhdDxsP9TR3kBF4z/SRyM7aThvP0/vzNEXIjqNX7en0fDy85o
HzDp5MJxGAg5t4aGzz0Ku7PyJxeQds7DQ2U62FRLg0odIvm+yjHpcdfGLSYO
D/L/cGFupfTqp31aOHZJsOfdEdIPcunnVM5q4Zfh1Unv/nHh2g1bZ/RMEwe9
2jqkIc0j/u7VuJGaBlbgnkmdJcODw9xm3/E8dVw2XGlsKceDGaqJ124Yq2Ox
2YpbvJR48NRjVPWOnRrOiS9/k6XFg1CNLfenLlfB7yyki6bN4RH/vfbNATUZ
fMDNbMk8Qx58WDd24t2QNNYN9GlDxjyyj9qbr7ZK4Z2ppRoB83jQk38oxjBN
Esv8WH/kmhWP9L+h1q0v/1gO+Td8DJzJ81kZ3aaxAlaxnIuieQiP8OYOg40t
fx30MzZtnx7Ggx1Njdb5U8cdMvX2PlbYOfn8BZuPMMRQgnV2pCicR/xeXNTM
ZRLIb9vP7znRPFjdfKgg8bg0UnuSVjo1iQcD1ab+szOUUNLKQpmhZB5cjZDo
nziljCY+VW3hniL5ER+rCkYqqLuXp1VzlgfN7aG3Ds9VRc+Zlof3XuSBxYq8
isQhNWR3c8XnzVk84GYaX9IMVEf3Fm5esDKbBxdUbeLr36ijfNck0Zy8yfzG
p4fla6CYA1/cvxdOXq9reNlYC/VN6b35sogHJ2tON5gma6HtqZJTKm/xYPwZ
xT7P10Jrb5hUppfywFE6YRk+r41emi9Wi/+PB13/Yiv3dmqjxax1O3aW8eBf
aNybz7Y6yLQlTte5ggf6cq3D1z7roAL/czEWleR9lbvawzNpiNF944N+FQ+e
HWrK5uykIRnJt0n/anjw1T9TZ8MwDcWdEXC7MA+MZhRpfFlER0O0UbtPj3nQ
u/bkz5ZoOuKazegvq+PBtMeWQ7N66ci72so1v54HWT76RrtnM1DTcrfrKS94
YPBodya1kYGWvfefiHnFgzx5+S6DFAaq9ovcEPyaB+2xa2LOVjOQeVfyvXVN
PCgWHv3lSvjyZuRlxSVveaBrSIn5EL7MOF3/mNnCg1bZfCUfwpMKOt8Y8h95
hMfzJ5YeodCxa32Rw5940J0+XbSX8OSoqVSz4Mtkvl+cYhOeDK+iGb3/xoOx
ihmap1opJHQyTaht48FZ/2Mbwn9SyPetY1sJmwdpuy4uPiPORO98vayzuTx4
slupgqvGRC4dYelJfPK8hoynYXpM9IZavCBPSOJ9uIguaUr4brXWh/IOHtSj
Sy/crZjo4/Ef+xq7eBAbc6TIw56JfKtqNXndPIj6TSueQniS03OhYqSHBx29
6uWT3xffNiPMS6WfB/JHpFQSbZnohxcMz/7Fg4NZ16XWLmSi8NOaWfZDRH/H
DzBaDZloqLZr0do/PDh9ubJJkWKimCH8JXSEBypx4pwxOSYaN7xw8MhfHtk3
A4rXf5P8+IVSmf948PDYs1Uy7RSSOYdqSid4UO20NcfwGYVO12v41Ynz4at0
kKVCIYVUxzrHv0ryIXalp++9BJJ/M5w3IMUn+r8Spe9PIUbQeZCV4UM+LuZt
sqZQflYIZ7ocH2b8MHYPVaTQrDcORy0V+MS/dWx1a2egWxIaM1Yq8WFT8RKm
bCkDzbPqfBqowofrZ3f5FB5goPthrK0xanzCh11GRo4MVPMhuPCGFp/wlqrk
+As6cpR1WM7S4cMjq785G5Pp6Lm9escHOp/4hW1tVU7E7xTWGEpM58O9aBSa
U05D/Gi1Et85fMJLSOnjXh0UUiJaGWHIBw+X30kGDB3Uw6nuSTbmE7/X/e1x
rTb6s2K72YN5fGDa1G0ZlNRGcszqe6rWfEiZdcv3ZJgmOrs6ba2BDR8iSgz2
Lp/QQBqJ24Yc7PgQZ9o4uzBVA03rVbHaAXxQfrm058BtwpOPg6qeO/PJ/vtS
1/lCFVUM2Wz8voIPd3wDI6e5qSIbI5WxX258+JEQnLO5UQUtPVdlr7eaDzFq
T6yOnFFG3kHKjw9u4MNcQZaxg4c8ipN9WG8Wyge5ORN/2pZLoI5dmrfsd/Bh
i0Q346aeOFr9Yc/pFbv4IAruqDb5NeEwM89o9da9/Em/41/u/NfhxcKcLxdj
+OB8UqzI+l2/g4b/4Z/jJ/kw/0PRaf09Fay4uq9N8ikk3487LgUcfcMSGVmX
6Zwl9ys9XRvO/8SqGuqLMj/Hh9SqJ584KkLW5lNbxLZl82HW7IJ1eRmDrFsV
Tuqvi/nw+ZX57YvZkliDujr0uYQP19Z2x3jXTMGHjox/FN7hg7p64tjHb1LY
w+1Bjth9PlgaX8u7oCGDhzgGsxdW86HJ+F773UAF7Lf8uMxiFh9eMyUG5cIV
ccNtTtfKWj7sZs25bHZACV/af+nO9md8OLtAo7sCVDAoKizKbuSTeV0U6rFA
Dd/aG8woesOHb1WHbWYVq2H1T8/+3W/mT/79KXBAVx0Lrx568uYDH67gx7aO
0hr4tHWvq8R3Pvyktdj7V2ji37mupsrtfNKvoJ5LaeHNkkUqFIcP854XhOyN
18Lmb/xbLAR86N/C4FaBNv4Y+M4v5CcfNOofLC+4qoNVHGhia3r5wJb0mErr
1cErdPyv2PXzocLG5e38RTRc3fiTpzzEh7Ts2FULntPwUOHC4yO/+WTe3Nul
JEv44cjB2bxholcqnbvXhY7zLWRDKsb4oPef1TH8hI4/K3vI5Y/zIWDVpi/Z
f+lYrSujOFlMAD6d+490zWfghMsze3ynCKDT5cuVlxkMXBMddnaZtAA2vlxg
5FnHwL89y8zMZATwPXvhB+t+Bg6eChGSCgIIrMh8oL6Ywlc4iRo/FQWEj04o
igVR+Muj1+WtygKw8pZcaZdIYfUMDa9aVQE86Llwoa6Awm7hG4dvqgtgrt+w
XFYthY+vuJp1TlMAmkV2b+99Jrw8s9PmkLYAeAMu/up9FP4zPu/bNpoAeiJi
eOWSTGz2OeqQB0MA2rzSnCwNJg65VzPNhimAWSP1r6v1mfhqypTaGdMFsM11
8DPTlIm/bncNUNQTkHrXcB9ZMrGGY7rEH30BdDxZ5Jphx8Qrqc/X2DMFMPQp
Oeo24dnE39OdXs4WwCXbf03/yGvcvE14z0AAo6vGvE/aM/HwrZITuUYC+NGm
dM7TmonnHx80OGEigMLOIkkvMyYO3Wz7MtxUAGGMCrPMWUx8bdHRMB8zARTF
PfqjpcPE39RfKCw1F4ChpnzXh6lMrNmjXDp3oQBqBuJL3w9SeFXDendtSwF0
GY380Gin8ImruX1i1gJw4IlHX3pO4dpYflrXIgFYFLxp3VZM4ZH1xgs+2ApA
f+vDe7EpFDafv/dDjb2A8PLoo7YdFA6Tfxh5AwlgYvjFn7MuFC4QTGilLRaA
oKSi79wMCn/HyypjlgjAfOMsm55RBta6lLJhq5MAUq6bHrjaxMDJqxg5Vi4C
eCt88tNwDwM/Mdhir+cqgE3GWlrSDgw8JnGzTW7l5OextFfJMPCuB5Z6bR4C
MEngfba8QMc30g49qfck8f7RWMf1omN22LPAu2sFhN9eH1HWoWNPXc/CBG8B
2BZ1l09No+FTo5nLd/kIiL9SWdnuQsPPPrR3ePkK4JlRpq2nGA1bJu80NvYX
gJGLv+HsbTqYPpD039vtRM8hzIL1Wtp4S2RqJj9EALSlF2wXlGvhm8MX4/+E
CeCbaEQrebUWtp4o9GCGC+C/1MHHjUc18TqFur7gaAHYrcv2HmtQx6mzxeeL
JQuI383SntamjD/dlKGpnxKADd0sOaFVCU+fqyI+O0UAFx5IlMS+UsSlC6a/
dU2b7Ad2a2axPG4E+z0XswTErztu+bh8Kp668cBd01sCqN8RmeWuM8Za1Raf
tfi2gPCOiU9G5QgrIyDpyNpSAcz7ZRAhtv4Pa2bwxdUxZQJ43BHUsip5gOUY
Wd5fVyWAYvWrEwVlHFbc2f75m14JIKPu6zp1F4HD4NOQslPdAtL//wqP0GWQ
fPXGDQd7SD3EZG/06Msi/fsrxcL6BPDkhVPEDwM55FEwf9WKQQGU9fcenjdX
Ad1OGOmUGRNA+I+mJg05FfQ09kfq8D8BhD6OCTY9poK+7Ptu1TEx2a9YqnRU
BckEPT5eLykk/t98+V2+KgpyStZLlBdCrK6fTMo1dRRrf7AhUlEIR8dPnspW
0kDnLXbuDlIWEv+7YHrlfg30ZNbqmqXqk9ebjw8s0UTTpGkbJBlCsk9V12x6
qoUsxuXEflFCgOHmqy+Y2sjt91ghd5oQBv+kyQ1HaqMYIXvwsb6Q8MTWTQem
66DW50Wp8UZCqGn0nWe8noZ+si5ZhZsISb0rjepyaWjKg9Ntm02FkLDo5mwe
l4bMb4SbIHMhmJdbClOD6Mglb8t704VCyMjcma1+jY78L66NmWYpJP53tkis
jY7OnrBu+LdICHrHlu6TcmOgwsNGu3/aCqE24Mcb1cMMxNpPaX23FwKHn20c
cYeBWnYr1TQiIQTodcya9Z2BureLba1eLCTzekrSDBkKSfoPyN1eIoTeObOo
UDMK0b35d7OdhMSvLykZXEeh+R6t3qeWC+H2zrRwHE0hZ+eGiRgXIXgmGATU
Z1JoM1QVhroKif76zshWUCjK+vZKn5VC0JJ4J3usmUIpZpcHXdyFZD6eF5p1
UKjAIDV70Woh4c/Bdyr/KPRI96ij4RohyC57OlNPmfCrzr5OnXVCaNB9t8h/
GhN1qmxLlfGavH9gd6MRE4nJelsNewtBeELNYivhS23xFW0iHyH4xsVVzSb8
aTpie/yjrxDeLtIlNMNETv1zTer9JvMR88CI8Ktv5/T3Ff5COHNb9WSYAxNF
cFRjCrcIwYIpPdKyiIlOfpbUy9gqJLxzoDLUnImuvh2qP76N1HPvq+dGBkz0
8IVoV2SwEHbJbdbXZjDR/QF/r42hQmga13t2Qp6J/mN8QYt3TMZjwFgyQqHb
S9cYzNklnPx9U11XPoWKdjaqKIYLYZl7Af9KI8lHhtPIwB4h5DaHRrqUUSgP
szifIojeZu0nI4NClzqsXrIihXDwuWft+UjCs6p3ywr2C2Fe1vMDDmsolG5j
lH3ygBBozzLXLTUl+Q68diz8oBBeilem3ZSmUEL5hbV2h4Xws1vw6wrRQ3yb
kr3+ESGcePPC2j6egWKnJs2SOSaERT+jtJ1XMVDEhpjf7xPJ+ZMzTWq5dLTr
6K+2h0lCWBeRssvqJh2FFu+ozzsphNcrQrzNd9LRln9+mWFniD7qWXEvf9KQ
x5UlNpIZQvDfWbzf9J0OcntZrd95UUh4zuXrzuM6aPkvC/mmLCFsaUn6F2ip
gxycDL5dyhWCTHd6anqaNprbqRBnfl0ISzV8qQ9ztZCBWuI2nRvk+bSQVQVN
mmim7cSq8SIhoD1mP8J2ayIqpX/6y9uT9fkrLX1TA8nNb30ccF9I5nVE1g4p
dSSKzpNKeyok+y5SO/mjEuJe0emJqhMSP1LHcOYporaXaa2+9WQ+vL2TYt+t
gFqphBsGr4SwLbq5Z85vOfSsNtil9p1w8v/zGjK6pdEVGfOUXo6Q+PW5R9wH
xhxufQmrHudN5nd/48DFUYf7t6//UBQKCX9t7r5lM+zQ4EFbYdIlhN9SH2ID
o3859GWKTQ0ZmJwnOxUzKnkOYNgUz5UQkfzbPcv5x2Wt+CvzX/8UEWiuqpBK
bxax1r52bBebKoL/VFQ+/szvZgXvqbCfLi+CuI0Ts74yfrFSH+aOblQXkf71
Oex/cYzFdtmxr2WGCOZ8WbjzXcRU3MUovMafJYLXfRK+Z8/I4MGf7e9+zRGR
eXDS51KhLJZJXzNfzURE+LU9SfeNPDb7YtOzaqGI8K957vU/ytjm9j6mn6UI
CmS+GtXFquClcaVuO61FkPn+1P6OvyrYW1+/+JSdiOj5u/bJQVUcHyob3LB0
8jxpT2pfq+OTdksuflwmggVcpWbsoIHPKx16LnQWgXSb+LzEEg1cVNY3U2ql
iPDpk3jrBE3cPPqRs3idCKgNApk+DW38pVFVdbWXiPTTdBX+Xm3Mv+wK/htE
MOH6y8PpjTYedsSX4zaJoMy1d7nBIR2se6pw46MgEaQuvrMopIqGR9++dLmx
XQSh27fbio3T8HudXqtzISKyXyu8GIiOEwutNMJ2imAGS8/q+UM69v+5UcJr
twjWWK9ZueIXHdssjO9z3COCw3bearZGDPzzcUMjPVIEYj6qG1alMvBzmZ9V
0vtFYHX8XtR2zMD57qo3B6JJPV5/Hf38g4FjMiwutsWISP/a+F7RpPDa7xuO
v4wVEf7b8vWhHYVNZ8ZFVMSJ4Hnlsd/TAyg8NexqwNV4Een/d8bNRynMvvvc
/cxREfGvx0afX6Fw1XCXfUyCCLqDdNzEWRQ+j5RNtiWKwCNK6mnsRwrvSlxA
90wSQeLyTHWrHgo7v/aScThJ8q88bWCuBBPracT+NjwtAh17ccPN6kw86pPP
1zwjApXV1y1e6DHxhyvP3omnisCpIbgrdC4Tl3Z01P5ME5F5p0pfQng1aZ7i
nc/nRJD9ZGqZB+HVLVHzc+suiEA2f4fzOcKntjXrTt29KIJiGLwvB4Rvp8Qc
yM0SQTk7sqmC8GrPisvbk7NFYKa7J+si4dWGtCfrInNFwDaLqishvHr1k3BJ
QB7JV5bfwlHCq7HT5c1XXhGR/S1Rf4jw6rpt83QXXRORfel0aZEME5uWrFGa
dV0EXxf0Rc4borDM4P4xlRuk/hrWKIDwKtcmp2usSET8R/i3ZsKr1UdqP3Xc
EhG+PZQST3g1o4H//MNtUu82P6MIwqu7lWXLa0tFYJH7KKuY8Kp+7uq0zDIR
CHwaVEb1KTzGizyccF8EG6rRBm3Cp61Gl3aGV4gg3GnaiaQ3hE8ruS7OVSJw
3131Lmo3A2+ZkLZeWC0CXt77xf9sGdhumfFsXZYIWnlmlZ1SDNz3PkJi+LEI
bOqdVGXT6fglPbOP95T0KxMvX76Wjq8FVLc11YngUZowW1yDjtf3Tnl044UI
nt1aPiFxmoZr5DIivN6KIDcqXXHITwdnrK4KWPJeBEHaCbKvFXVweGab+7wW
EexwN2F5V2njmbPnmEz9LAKFLb0LihW08cnFlfwKtghezGmhGV3UxBV9krLf
uCI4aXl+tM9AE3Pz3OeKC0RkPtvzzCs1sM24MNK1k5xf2Zbp16SOu6o0p7L7
RfCydL7pN44qXrEwwlBWsgNaji7tcXGRx1E81kpTqQ6w/6aWKW4kh6+my+1d
M7WD8IJQJmeqLB7tu1KVK99B5hsskKySxrdKml3NNTpAFFzgfGBCHMvNMd21
cVYHdF7bZl6zoY9l2XogPX5OB/H3B5Mjy36wthyvq7hu2AF183+cmFkqZFXx
fCd653ZAq+w/zhS7z6zQ/FOpCZYdhLdK4jvs3zi8pHWWlSzvgNuXfgwfbPzj
8Lth4cd3Lh0gv9bhfPiSUQf96Pi/f1w7yPzcV7H0wZhDTKv2UkePDmBv+pdm
9lIMGZ1b1tLq3QF35ompzD0jhdY7po/89ekgfGI9zHgojY72f2fqbeog+0Tb
bT1nKvriHrktLKADOKpLZfQM5ZD0RO3J1MAO2LumIS/MWR6ZlyrcKQ/qgIZf
0BK1VQH5bfJ+/2V7B7Q1FIp0DymikwoFfyZCOuD0HuMZzulK6H8eNhFU
       "]]},
     Annotation[#, "Charting`Private`Tag$42547#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
96xLyllD4/vE0OW1I7Yh/AXrf8mhokk=
       "]]},
     Annotation[#, "Charting`Private`Tag$42547#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 50000}, {-0.00011158809085355175`, 0.00011158266421956131`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.832794650069829*^9, 3.832794703569805*^9}, 
   3.8327947883173027`*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"55b192bf-14a7-4ebb-ba25-6a25b29b122e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</home/chang/Dropbox/Projects/MRI_flow/mathematica/concrete/\
subaraWaveforms.png\>\"", ",", "subaraWaveforms", ",", 
   RowBox[{"ImageResolution", "\[Rule]", "300"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.832794799851906*^9, 3.832794839170184*^9}, {
  3.8327948940964127`*^9, 3.832794901208716*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"2f0d8cdf-fb1e-437f-a5ea-6ac27340d9be"],

Cell[BoxData["\<\"/home/chang/Dropbox/Projects/MRI_flow/mathematica/concrete/\
subaraWaveforms.png\"\>"], "Output",
 CellChangeTimes->{3.83279484089509*^9, 3.832794902967702*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"a6aca979-5d03-4a26-8ddf-105b4cdeebff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"waveData", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"SubarachnoidFlow", "[", "5", "]"}], "[", "t", "]"}], ",", " ", 
      RowBox[{
       RowBox[{"SubarachnoidFlow", "[", "15", "]"}], "[", "t", "]"}]}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", 
      RowBox[{"10", "*", "5000"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.832795005980597*^9, 3.832795069465476*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"eba5181c-8828-4126-8c95-88fe40ab558d"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.`", ",", "0.`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.7674785086560103`*^-10", ",", "0.`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "5.223871906511164`*^-9", ",", "3.1019036776488657`*^-18"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "2.8707431138241798`*^-8", ",", "1.1415005533747827`*^-15"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"8.302884034528869`*^-8", ",", "3.99173644597707`*^-14"}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "1.7371181408700394`*^-7", ",", "4.4050651110237815`*^-13"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "3.0047531311253303`*^-7", ",", "2.826820655707609`*^-12"}], 
            "}"}], ",", 
           TemplateBox[{"49987"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            RowBox[{
            "0.00005759151796406792`", ",", "0.000013660869550489365`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0.00005771157101351806`", ",", "0.000013765290792528735`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0.000057831532907879035`", ",", "0.000013869690292063785`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0.000057951403461177236`", ",", "0.000013974067885113416`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0.000058071182487428726`", ",", "0.000014078423407695487`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0.00005819086980065783`", ",", "0.000014182756695828895`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0.000058310465214884765`", ",", "0.00001428706758553357`"}], 
            "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{45., {1., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{54., {1., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 76, 31714567250611938150, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{45., {1., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 76, 31714567250611938150, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{45., {1., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 76, 31714567250611938150, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{86., {1., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[31714567250611938150 === $SessionID, 
   Out[76], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.8327950768735657`*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"48d6318a-0925-43ea-89bc-96a91e31d2b3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</home/chang/Dropbox/Projects/MRI_flow/mathematica/concrete/\
subaraWaveData.csv\>\"", ",", "waveData"}], "]"}]], "Input",
 CellChangeTimes->{{3.832795082034113*^9, 3.832795109079925*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"a6306117-5524-4f22-8d82-d1a82672d23b"],

Cell[BoxData["\<\"/home/chang/Dropbox/Projects/MRI_flow/mathematica/concrete/\
subaraWaveData.csv\"\>"], "Output",
 CellChangeTimes->{3.832795111575864*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"d9b13ac3-a852-496a-a0cb-c9a7557490d8"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"myImages", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{
              RowBox[{"DuralTension", "[", "i", "]"}], "[", "t", "]"}]}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}], ",", "       ", 
         RowBox[{"(*", " ", 
          RowBox[{"Dural", " ", "Tension"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"50", 
              RowBox[{
               RowBox[{"SyrinxTension", "[", "i", "]"}], "[", "t", "]"}]}]}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}], ",", "       ", 
         RowBox[{"(*", 
          RowBox[{"syrinx", " ", "tension"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"100000", 
              RowBox[{
               RowBox[{"SubarachnoidFlow", "[", "i", "]"}], "[", "t", 
               "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}], ",", "   ", 
         RowBox[{"(*", 
          RowBox[{"subarachnoid", " ", "flow"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"10000000000000", 
              RowBox[{
               RowBox[{"CanalFlow", "[", "i", "]"}], "[", "t", "]"}]}]}], "}"}
            ], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "   ", 
        RowBox[{"(*", " ", 
         RowBox[{"Central", " ", "Canal", " ", "Flow"}], " ", "*)"}], 
        "\[IndentingNewLine]", "}"}], ",", "  ", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"range1", " ", "=", " ", "200"}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "range1"}], ",", "range1"}], "}"}]}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Dural Tension\>\"", ",", "\"\<Syrinx Tenxion\>\"", ",", 
          "\"\<Subarachnoid Flow\>\"", ",", "\"\<CanalFlow\>\""}], "}"}]}]}], 
      "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "analPeriod", ",", "500"}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.83264313252631*^9, {3.832643172940564*^9, 3.8326432058630323`*^9}, {
   3.832643389301898*^9, 3.832643410507534*^9}, 3.83264345585431*^9, {
   3.832643775422846*^9, 3.83264377580307*^9}, {3.832644008774938*^9, 
   3.832644015845097*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"75dd9e47-5c51-43c0-8341-4b69ed138bc5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<mygif.gif\>\"", ",", "myImages"}], "]"}]], "Input",
 CellChangeTimes->{{3.8326440804037848`*^9, 3.832644088680729*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"c612c68c-9cf9-4329-afde-320d836c2788"],

Cell[BoxData["\<\"mygif.gif\"\>"], "Output",
 CellChangeTimes->{3.8326441065564547`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"81531eb6-4d34-4b55-af13-dd2d68d4c1e1"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1539, 982},
WindowMargins->{{167, Automatic}, {-260, Automatic}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
TaggingRules->{"TryRealOnly" -> False},
FrontEndVersion->"12.2 for Linux x86 (64-bit) (2021\:5e742\:67082\:65e5)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"9fcbc327-5246-4751-b26f-2fa2ea1b1568"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 318, 5, 69, "Chapter",ExpressionUUID->"55835633-d11e-4712-bd69-1d0b2e007bb9"],
Cell[901, 29, 189, 3, 31, "Subsubtitle",ExpressionUUID->"7c173022-470f-4072-bb3c-0644d67a842a"],
Cell[1093, 34, 183, 3, 47, "Input",ExpressionUUID->"eae7ec3d-03e4-48a1-a668-060fa651465f"],
Cell[CellGroupData[{
Cell[1301, 41, 31943, 776, 2063, "Input",ExpressionUUID->"d0555d94-fb64-4e8f-b9bf-25161a7ab3b9"],
Cell[33247, 819, 295, 4, 34, "Output",ExpressionUUID->"59c157b7-2d87-4c01-8666-a2cac27af9d2"],
Cell[33545, 825, 385, 8, 34, "Output",ExpressionUUID->"d06ad8b3-7b75-4bb1-9d96-5762683d624b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33967, 838, 13184, 217, 337, "Input",ExpressionUUID->"b8193ec1-b808-47ae-9365-132966821731"],
Cell[47154, 1057, 4563, 80, 313, "Output",ExpressionUUID->"83d16af5-6bf0-4311-a340-e8073dac4142"]
}, Open  ]],
Cell[51732, 1140, 3218, 83, 313, "Input",ExpressionUUID->"0b85cdf1-1faf-41cc-bb91-63d4990f1321"],
Cell[CellGroupData[{
Cell[54975, 1227, 375, 7, 47, "Input",ExpressionUUID->"859cb199-5314-4b04-ab17-a8bacfe51fa0"],
Cell[55353, 1236, 258, 3, 82, "Output",ExpressionUUID->"04e0d28c-6218-4f7a-aa71-f486af043c70"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55648, 1244, 650, 16, 47, "Input",ExpressionUUID->"b3855349-f648-496c-9af9-2db696fd7a6d"],
Cell[56301, 1262, 71468, 1192, 207, "Output",ExpressionUUID->"55b192bf-14a7-4ebb-ba25-6a25b29b122e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[127806, 2459, 438, 8, 47, "Input",ExpressionUUID->"2f0d8cdf-fb1e-437f-a5ea-6ac27340d9be"],
Cell[128247, 2469, 257, 3, 34, "Output",ExpressionUUID->"a6aca979-5d03-4a26-8ddf-105b4cdeebff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128541, 2477, 581, 15, 47, "Input",ExpressionUUID->"eba5181c-8828-4126-8c95-88fe40ab558d"],
Cell[129125, 2494, 10662, 279, 146, "Output",ExpressionUUID->"48d6318a-0925-43ea-89bc-96a91e31d2b3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[139824, 2778, 323, 6, 47, "Input",ExpressionUUID->"a6306117-5524-4f22-8d82-d1a82672d23b"],
Cell[140150, 2786, 235, 3, 34, "Output",ExpressionUUID->"d9b13ac3-a852-496a-a0cb-c9a7557490d8"]
}, Open  ]],
Cell[140400, 2792, 3253, 83, 313, "Input",ExpressionUUID->"75dd9e47-5c51-43c0-8341-4b69ed138bc5"],
Cell[CellGroupData[{
Cell[143678, 2879, 252, 4, 48, "Input",ExpressionUUID->"c612c68c-9cf9-4329-afde-320d836c2788"],
Cell[143933, 2885, 167, 2, 34, "Output",ExpressionUUID->"81531eb6-4d34-4b55-af13-dd2d68d4c1e1"]
}, Open  ]]
}, Open  ]]
}
]
*)

